#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

timezone=$(cat /etc/timezone)
encrypt_key=$(ynh_string_random --length=24)
password_hash=$(echo -n admin:BaikalDAV:$password | sha256sum | cut -d ' ' -f 1)

ynh_app_setting_set --key="encrypt_key" --value="$encrypt_key"
ynh_app_setting_set --key="password_hash" --value="$password_hash"

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression "Validating installation parameters..."

# Check if .well-known is available for this domain.
if is_url_handled --domain="$domain" --path="/.well-known/caldav" || is_url_handled --domain="$domain" --path="/.well-known/carddav"
then
    ynh_die "Another app already uses the domain $domain to serve a calDAV/cardDAV feature. Please use another domain."
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_phpfpm

ynh_config_add_nginx

# Create the logfile, required before configuring fail2ban
touch "/var/log/nginx/${domain}-error.log"

# Create a dedicated fail2ban config
ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex='"PHP message: user \(name stripped-out\) authentication failure for Baikal" while reading response header from upstream, client: <HOST>'

#=================================================
# INITIALIZE DATABASE
#=================================================
ynh_script_progression "Configuring $app..."

ynh_mysql_db_shell < "$install_dir/Core/Resources/Db/MySQL/db.sql"

#=================================================
# CONFIGURE BAIKAL
#=================================================
ynh_script_progression "Adding $app's configuration..."

path=${path%/}

ynh_config_add --template="baikal.yaml" --destination="$install_dir/config/baikal.yaml"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app: "$install_dir/config/baikal.yaml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 640 "$install_dir/config/baikal.yaml"

# Disable installation
touch "$install_dir/Specific/INSTALL_DISABLED"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
